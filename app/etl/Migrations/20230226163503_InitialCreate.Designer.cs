// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using etl;

#nullable disable

namespace etl.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20230226163503_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("etl.StationDataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("POINT")
                        .HasAnnotation("Sqlite:Srid", 4326);

                    b.Property<decimal?>("MaxTemperature")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MinTemperature")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("RecordDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SusStation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StationId", "RecordDate")
                        .IsUnique();

                    b.ToTable("StationData");
                });
#pragma warning restore 612, 618
        }
    }
}
